{"ast":null,"code":"var _jsxFileName = \"/home/napster/Desktop/hackathon/HACK 4/2048-Game/2048-game/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport cloneDeep from \"lodash.clonedeep\";\nimport { useEvent, getColors } from \"./util\";\nimport { motion, AnimatePresence } from \"framer-motion\"; // import Swipe from \"react-easy-swipe\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const UP_ARROW = 38;\n  const DOWN_ARROW = 40;\n  const LEFT_ARROW = 37;\n  const RIGHT_ARROW = 39;\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [data, setData] = useState([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]);\n  const [gameOver, setGameOver] = useState(false); // Initialize\n\n  const initialize = () => {\n    // console.log(\"CALLING INITIALIZE\");\n    let newGrid = cloneDeep(data);\n    console.log(newGrid);\n    addNumber(newGrid);\n    console.table(newGrid);\n    addNumber(newGrid);\n    console.table(newGrid);\n    setData(newGrid);\n  }; // AddNumber - Add an item\n\n\n  const addNumber = newGrid => {\n    let added = false;\n    let gridFull = false;\n    let attempts = 0;\n\n    while (!added) {\n      if (gridFull) {\n        break;\n      }\n\n      let rand1 = Math.floor(Math.random() * 4);\n      let rand2 = Math.floor(Math.random() * 4);\n      attempts++;\n\n      if (newGrid[rand1][rand2] === 0) {\n        newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n        added = true;\n      }\n\n      if (attempts > 50) {\n        gridFull = true;\n        let gameOverr = checkIfGameOver();\n\n        if (gameOverr) {\n          alert(\"game over\"); // setGameOver(true);\n        } // setGameOver(true);\n\n      }\n    }\n  }; // Swipe Left\n\n\n  const swipeLeft = dummy => {\n    console.log(\"swipe left\");\n    let oldGrid = data;\n    let newArray = cloneDeep(data);\n\n    for (let i = 0; i < 4; i++) {\n      let b = newArray[i];\n      let slow = 0;\n      let fast = 1;\n\n      while (slow < 4) {\n        if (fast === 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n\n        if (b[slow] === 0 && b[fast] === 0) {\n          fast++;\n        } else if (b[slow] === 0 && b[fast] !== 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast++;\n        } else if (b[slow] !== 0 && b[fast] === 0) {\n          fast++;\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\n          if (b[slow] === b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            b[fast] = 0;\n            setScore(score + b[slow]);\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n\n    if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\n      addNumber(newArray);\n    }\n\n    if (dummy) {\n      return newArray;\n    } else {\n      setData(newArray);\n    }\n  };\n\n  const swipeRight = dummy => {\n    console.log(\"swipe right\");\n    let oldData = data;\n    let newArray = cloneDeep(data);\n\n    for (let i = 3; i >= 0; i--) {\n      let b = newArray[i];\n      let slow = b.length - 1;\n      let fast = slow - 1;\n\n      while (slow > 0) {\n        if (fast === -1) {\n          fast = slow - 1;\n          slow--;\n          continue;\n        }\n\n        if (b[slow] === 0 && b[fast] === 0) {\n          fast--;\n        } else if (b[slow] === 0 && b[fast] !== 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast--;\n        } else if (b[slow] !== 0 && b[fast] === 0) {\n          fast--;\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\n          if (b[slow] === b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            b[fast] = 0;\n            setScore(score + b[slow]);\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow--;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n\n    if (JSON.stringify(newArray) !== JSON.stringify(oldData)) {\n      addNumber(newArray);\n    }\n\n    if (dummy) {\n      return newArray;\n    } else {\n      setData(newArray);\n    }\n  };\n\n  const swipeDown = dummy => {\n    console.log(\"swipe down\");\n    console.log(data);\n    let b = cloneDeep(data);\n    let oldData = JSON.parse(JSON.stringify(data));\n\n    for (let i = 3; i >= 0; i--) {\n      let slow = b.length - 1;\n      let fast = slow - 1;\n\n      while (slow > 0) {\n        if (fast === -1) {\n          fast = slow - 1;\n          slow--;\n          continue;\n        }\n\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\n          fast--;\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast--;\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n          fast--;\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n          if (b[slow][i] === b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            b[fast][i] = 0;\n            setScore(score + b[slow][i]);\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow--;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n\n    if (JSON.stringify(b) !== JSON.stringify(oldData)) {\n      addNumber(b);\n    }\n\n    if (dummy) {\n      return b;\n    } else {\n      setData(b);\n    }\n  };\n\n  const swipeUp = dummy => {\n    console.log(\"swipe up\");\n    let b = cloneDeep(data);\n    let oldData = JSON.parse(JSON.stringify(data));\n\n    for (let i = 0; i < 4; i++) {\n      let slow = 0;\n      let fast = 1;\n\n      while (slow < 4) {\n        if (fast === 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\n          fast++;\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast++;\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n          fast++;\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n          if (b[slow][i] === b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            b[fast][i] = 0;\n            setScore(score + b[slow][i]);\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n\n    if (JSON.stringify(oldData) !== JSON.stringify(b)) {\n      addNumber(b);\n    }\n\n    if (dummy) {\n      return b;\n    } else {\n      setData(b);\n    }\n  }; // Check Gameover\n\n\n  const checkIfGameOver = () => {\n    console.log(\"CHECKING GAME OVER\"); // let original = cloneDeep(data);\n\n    let checker = swipeLeft(true);\n\n    if (JSON.stringify(data) !== JSON.stringify(checker)) {\n      return false;\n    }\n\n    let checker2 = swipeDown(true);\n    console.log(\"CHECKER DOWN\");\n    console.table(data);\n    console.table(checker2);\n\n    if (JSON.stringify(data) !== JSON.stringify(checker2)) {\n      return false;\n    }\n\n    let checker3 = swipeRight(true);\n\n    if (JSON.stringify(data) !== JSON.stringify(checker3)) {\n      return false;\n    }\n\n    let checker4 = swipeUp(true);\n\n    if (JSON.stringify(data) !== JSON.stringify(checker4)) {\n      return false;\n    }\n\n    return true;\n  }; // Reset\n\n\n  const resetGame = () => {\n    setGameOver(false);\n    const emptyGrid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n    addNumber(emptyGrid);\n    setScore(0);\n    setData(emptyGrid);\n  };\n\n  const handleKeyDown = event => {\n    if (gameOver) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case UP_ARROW:\n        swipeUp();\n        break;\n\n      case DOWN_ARROW:\n        swipeDown();\n        break;\n\n      case LEFT_ARROW:\n        swipeLeft();\n        break;\n\n      case RIGHT_ARROW:\n        swipeRight();\n        break;\n\n      default:\n        break;\n    }\n\n    let gameOverr = checkIfGameOver();\n\n    if (gameOverr) {\n      setGameOver(true);\n    }\n  };\n\n  useEffect(() => {\n    initialize(); // eslint-disable-next-line\n  }, []); // This is a custom function\n\n  useEvent(\"keydown\", handleKeyDown);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: \"2048\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"newgamebtn\",\n        onClick: resetGame,\n        children: \"NEW GAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"high-score\",\n              children: \"Top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"high-score\",\n              children: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont\",\n      children: [gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.gameOverOverlay,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 30,\n              fontFamily: \"sans-serif\",\n              fontWeight: \"900\",\n              color: \"#776E65\"\n            },\n            children: \"Game Over\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 1,\n                marginTop: \"auto\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: resetGame,\n                style: style.tryAgainButton,\n                children: \"Try Again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: data.map(ls => ls.map((key, index) => /*#__PURE__*/_jsxDEV(Cube, {\n          num: key\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 44\n        }, this)) // <Cube key={ls} num={ls} />\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"game-explanation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            class: \"important\",\n            children: \"How to play :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Use your \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"arrow keys\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 22\n          }, this), \" to move the tiles.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), \"When two tiles with the same number touch, they\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"merge into one!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"W60lPRYVgH0AbXlMF7zYjSXVamE=\", false, function () {\n  return [useEvent];\n});\n\n_c = Game;\n\nconst Cube = ({\n  num\n}) => {\n  const {\n    blockStyle\n  } = style;\n  const animation = {\n    initial: {\n      scale: 0\n    },\n    animate: {\n      scale: 1,\n      delay: 0\n    },\n    exit: {\n      scale: 0\n    }\n  };\n  console.log(\"yero:\", num);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"cube\",\n    style: {\n      background: getColors(num),\n      color: num === 2 || num === 4 ? \"#645B52\" : \"#F7F4EF\"\n    },\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      layout: true,\n      children: num !== 0 ? num : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Cube;\nconst style = {\n  newGameButton: {\n    padding: 10,\n    background: \"#2cb67d\",\n    color: \"#F8F5F0\",\n    width: 95,\n    borderRadius: 7,\n    fontWeight: \"900\",\n    // marginLeft: \"auto\",\n    // marginBottom: \"auto\",\n    cursor: \"pointer\"\n  },\n  tryAgainButton: {\n    padding: 10,\n    background: \"#846F5B\",\n    color: \"#F8F5F0\",\n    width: 80,\n    borderRadius: 7,\n    fontWeight: \"900\",\n    cursor: \"pointer\",\n    margin: \"auto\",\n    marginTop: 20\n  },\n  gameOverOverlay: {\n    position: \"absolute\",\n    height: \"100%\",\n    width: \"100%\",\n    left: 0,\n    top: 0,\n    borderRadius: 5,\n    background: \"rgba(238,228,218,.5)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n};\nexport default Game;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Cube\");","map":{"version":3,"sources":["/home/napster/Desktop/hackathon/HACK 4/2048-Game/2048-game/src/Game.js"],"names":["React","useState","useEffect","cloneDeep","useEvent","getColors","motion","AnimatePresence","Game","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","score","setScore","highScore","setHighScore","data","setData","gameOver","setGameOver","initialize","newGrid","console","log","addNumber","table","added","gridFull","attempts","rand1","Math","floor","random","rand2","gameOverr","checkIfGameOver","alert","swipeLeft","dummy","oldGrid","newArray","i","b","slow","fast","JSON","stringify","swipeRight","oldData","length","swipeDown","parse","swipeUp","checker","checker2","checker3","checker4","resetGame","emptyGrid","handleKeyDown","event","keyCode","style","gameOverOverlay","fontSize","fontFamily","fontWeight","color","flex","marginTop","tryAgainButton","map","ls","key","index","Cube","num","blockStyle","animation","initial","scale","animate","delay","exit","background","newGameButton","padding","width","borderRadius","cursor","margin","position","height","left","top","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport cloneDeep from \"lodash.clonedeep\";\nimport { useEvent, getColors } from \"./util\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\n// import Swipe from \"react-easy-swipe\";\n\nfunction Game() {\n  const UP_ARROW = 38;\n  const DOWN_ARROW = 40;\n  const LEFT_ARROW = 37;\n  const RIGHT_ARROW = 39;\n\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n\n  const [data, setData] = useState([\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ]);\n\n  const [gameOver, setGameOver] = useState(false);\n\n  // Initialize\n  const initialize = () => {\n    // console.log(\"CALLING INITIALIZE\");\n\n    let newGrid = cloneDeep(data);\n    console.log(newGrid);\n\n    addNumber(newGrid);\n    console.table(newGrid);\n    addNumber(newGrid);\n    console.table(newGrid);\n    setData(newGrid);\n  };\n\n  // AddNumber - Add an item\n  const addNumber = (newGrid) => {\n    let added = false;\n    let gridFull = false;\n    let attempts = 0;\n    while (!added) {\n      if (gridFull) {\n        break;\n      }\n\n      let rand1 = Math.floor(Math.random() * 4);\n      let rand2 = Math.floor(Math.random() * 4);\n      attempts++;\n      if (newGrid[rand1][rand2] === 0) {\n        newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n        added = true;\n      }\n      if (attempts > 50) {\n        gridFull = true;\n        let gameOverr = checkIfGameOver();\n        if (gameOverr) {\n          alert(\"game over\");\n          // setGameOver(true);\n        }\n        // setGameOver(true);\n      }\n    }\n  };\n  // Swipe Left\n  const swipeLeft = (dummy) => {\n    console.log(\"swipe left\");\n    let oldGrid = data;\n    let newArray = cloneDeep(data);\n\n    for (let i = 0; i < 4; i++) {\n      let b = newArray[i];\n      let slow = 0;\n      let fast = 1;\n      while (slow < 4) {\n        if (fast === 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n        if (b[slow] === 0 && b[fast] === 0) {\n          fast++;\n        } else if (b[slow] === 0 && b[fast] !== 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast++;\n        } else if (b[slow] !== 0 && b[fast] === 0) {\n          fast++;\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\n          if (b[slow] === b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            b[fast] = 0;\n\n            setScore(score + b[slow]);\n\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\n      addNumber(newArray);\n    }\n    if (dummy) {\n      return newArray;\n    } else {\n      setData(newArray);\n    }\n  };\n\n  const swipeRight = (dummy) => {\n    console.log(\"swipe right\");\n    let oldData = data;\n    let newArray = cloneDeep(data);\n\n    for (let i = 3; i >= 0; i--) {\n      let b = newArray[i];\n      let slow = b.length - 1;\n      let fast = slow - 1;\n      while (slow > 0) {\n        if (fast === -1) {\n          fast = slow - 1;\n          slow--;\n          continue;\n        }\n        if (b[slow] === 0 && b[fast] === 0) {\n          fast--;\n        } else if (b[slow] === 0 && b[fast] !== 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast--;\n        } else if (b[slow] !== 0 && b[fast] === 0) {\n          fast--;\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\n          if (b[slow] === b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            b[fast] = 0;\n\n            setScore(score + b[slow]);\n\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow--;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(newArray) !== JSON.stringify(oldData)) {\n      addNumber(newArray);\n    }\n    if (dummy) {\n      return newArray;\n    } else {\n      setData(newArray);\n    }\n  };\n\n  const swipeDown = (dummy) => {\n    console.log(\"swipe down\");\n    console.log(data);\n    let b = cloneDeep(data);\n    let oldData = JSON.parse(JSON.stringify(data));\n    for (let i = 3; i >= 0; i--) {\n      let slow = b.length - 1;\n      let fast = slow - 1;\n      while (slow > 0) {\n        if (fast === -1) {\n          fast = slow - 1;\n          slow--;\n          continue;\n        }\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\n          fast--;\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast--;\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n          fast--;\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n          if (b[slow][i] === b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            b[fast][i] = 0;\n\n            setScore(score + b[slow][i]);\n\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow--;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(b) !== JSON.stringify(oldData)) {\n      addNumber(b);\n    }\n    if (dummy) {\n      return b;\n    } else {\n      setData(b);\n    }\n  };\n\n  const swipeUp = (dummy) => {\n    console.log(\"swipe up\");\n    let b = cloneDeep(data);\n    let oldData = JSON.parse(JSON.stringify(data));\n    for (let i = 0; i < 4; i++) {\n      let slow = 0;\n      let fast = 1;\n      while (slow < 4) {\n        if (fast === 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\n          fast++;\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast++;\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n          fast++;\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n          if (b[slow][i] === b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            b[fast][i] = 0;\n\n            setScore(score + b[slow][i]);\n\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(oldData) !== JSON.stringify(b)) {\n      addNumber(b);\n    }\n    if (dummy) {\n      return b;\n    } else {\n      setData(b);\n    }\n  };\n\n  // Check Gameover\n  const checkIfGameOver = () => {\n    console.log(\"CHECKING GAME OVER\");\n    // let original = cloneDeep(data);\n    let checker = swipeLeft(true);\n\n    if (JSON.stringify(data) !== JSON.stringify(checker)) {\n      return false;\n    }\n\n    let checker2 = swipeDown(true);\n    console.log(\"CHECKER DOWN\");\n    console.table(data);\n    console.table(checker2);\n    if (JSON.stringify(data) !== JSON.stringify(checker2)) {\n      return false;\n    }\n\n    let checker3 = swipeRight(true);\n\n    if (JSON.stringify(data) !== JSON.stringify(checker3)) {\n      return false;\n    }\n\n    let checker4 = swipeUp(true);\n\n    if (JSON.stringify(data) !== JSON.stringify(checker4)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  // Reset\n  const resetGame = () => {\n    setGameOver(false);\n    const emptyGrid = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    addNumber(emptyGrid);\n    setScore(0);\n    setData(emptyGrid);\n  };\n\n  const handleKeyDown = (event) => {\n    if (gameOver) {\n      return;\n    }\n    switch (event.keyCode) {\n      case UP_ARROW:\n        swipeUp();\n        break;\n      case DOWN_ARROW:\n        swipeDown();\n        break;\n      case LEFT_ARROW:\n        swipeLeft();\n        break;\n      case RIGHT_ARROW:\n        swipeRight();\n        break;\n      default:\n        break;\n    }\n\n    let gameOverr = checkIfGameOver();\n    if (gameOverr) {\n      setGameOver(true);\n    }\n  };\n\n  useEffect(() => {\n    initialize();\n    // eslint-disable-next-line\n  }, []);\n\n  // This is a custom function\n  useEvent(\"keydown\", handleKeyDown);\n\n  return (\n    <div className=\"App\">\n      <span className=\"title\">2048</span>\n      <div className=\"score-container\">\n        <button className=\"newgamebtn\" onClick={resetGame}>\n          NEW GAME\n        </button>\n        <div className=\"score-wrapper\">\n          <div className=\"score\">\n            <div className=\"score-wrapper\">\n              <span>Score</span>\n              <span className=\"high-score\">Top</span>\n            </div>\n            <div className=\"score-wrapper\">\n              <span>{score}</span>\n              <span className=\"high-score\">{score}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"cont\">\n        {gameOver && (\n          <div style={style.gameOverOverlay}>\n            <div>\n              <div\n                style={{\n                  fontSize: 30,\n                  fontFamily: \"sans-serif\",\n                  fontWeight: \"900\",\n                  color: \"#776E65\",\n                }}\n              >\n                Game Over\n              </div>\n              <div>\n                <div\n                  style={{\n                    flex: 1,\n                    marginTop: \"auto\",\n                  }}\n                >\n                  <div onClick={resetGame} style={style.tryAgainButton}>\n                    Try Again\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {/* <Swipe\n            onSwipeDown={() => {\n              swipeDown();\n            }}\n            onSwipeLeft={() => swipeLeft()}\n            onSwipeRight={() => swipeRight()}\n            onSwipeUp={() => swipeUp()}\n            style={{ overflowY: \"hidden\" }}\n          > */}\n        {/* {data.map((row, oneIndex) => {\n              return (\n                  {row.map((digit, index) => (\n                    <Block num={digit} key={index} />\n                  ))}\n              );\n            })} */}\n        <AnimatePresence>\n          {data.map(\n            (ls) => ls.map((key, index) => <Cube key={index} num={key} />)\n            // <Cube key={ls} num={ls} />\n          )}\n        </AnimatePresence>\n        {/* </Swipe> */}\n      </div>\n      <div>\n        <p class=\"game-explanation\">\n          <div>\n            <strong class=\"important\">How to play :</strong>\n          </div>\n          <div>\n            Use your <strong>arrow keys</strong> to move the tiles.\n            <br />\n            When two tiles with the same number touch, they{\" \"}\n            <strong>merge into one!</strong>\n          </div>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nconst Cube = ({ num }) => {\n  const { blockStyle } = style;\n\n  const animation = {\n    initial: {\n      scale: 0,\n    },\n    animate: {\n      scale: 1,\n      delay: 0,\n    },\n    exit: {\n      scale: 0,\n    },\n  };\n\n  console.log(\"yero:\", num);\n  return (\n    <motion.div\n      className=\"cube\"\n      style={{\n        background: getColors(num),\n        color: num === 2 || num === 4 ? \"#645B52\" : \"#F7F4EF\",\n      }}\n    >\n      <motion.div layout>{num !== 0 ? num : \"\"}</motion.div>\n    </motion.div>\n  );\n};\n\nconst style = {\n  newGameButton: {\n    padding: 10,\n    background: \"#2cb67d\",\n    color: \"#F8F5F0\",\n    width: 95,\n    borderRadius: 7,\n    fontWeight: \"900\",\n    // marginLeft: \"auto\",\n    // marginBottom: \"auto\",\n    cursor: \"pointer\",\n  },\n  tryAgainButton: {\n    padding: 10,\n    background: \"#846F5B\",\n    color: \"#F8F5F0\",\n    width: 80,\n    borderRadius: 7,\n    fontWeight: \"900\",\n    cursor: \"pointer\",\n    margin: \"auto\",\n    marginTop: 20,\n  },\n  gameOverOverlay: {\n    position: \"absolute\",\n    height: \"100%\",\n    width: \"100%\",\n    left: 0,\n    top: 0,\n    borderRadius: 5,\n    background: \"rgba(238,228,218,.5)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}